#old school
def convertAttr(Attr):
    '''Convert given value to a Json serializable format'''
    if type(Attr) in [type(mathutils.Vector()),type(mathutils.Color())]:
        if len(Attr) == 3:
            return([Attr[0],Attr[1],Attr[2]])
        elif len(Attr) == 1:
            return([Attr[0]])
        elif len(Attr) == 4:
            return([Attr[0],Attr[1],Attr[2],Attr[3]])
    elif type(Attr) == type(mathutils.Matrix()):
        return (np.matrix(Attr).tolist())
    else:
        return(Attr)


#more pythonic
def convertAttr(Attr):
    '''Convert given value to a Json serializable format'''
    if isinstance(Attr, (mathutils.Vector,mathutils.Color)):
        return Attr[:]
    elif isinstance(Attr, mathutils.Matrix):
        return [v[:] for v in Attr]
    elif isinstance(Attr,bpy.types.bpy_prop_array):
        return [Attr[i] for i in range(0,len(Attr))]
    else:
        return(Attr)